name: test CI

on: [pull_request]

jobs:
  pytest_with_coverage_on_supported_os:
    strategy:
      fail-fast: true
      matrix:
        # currently we only need to ensure it is running on the following OS
        # with OS-shipped python interpreter.
        os: ["ubuntu-20.04", "ubuntu-22.04"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout commit
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          cache: "pip"

      - name: Install package
        run: |
          python -m pip install -q -U pip
          pip install -q .[dev]

      - name: Execute pytest with coverage
        run: |
          coverage run -m pytest --junit-xml=test_result/pytest.xml
          coverage xml -o test_result/coverage.xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        continue-on-error: true
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      # export the coverage report to the comment!
      - name: Add coverage report to PR comment
        continue-on-error: true
        uses: MishaKav/pytest-coverage-comment@v1.1.51
        with:
          pytest-xml-coverage-path: test_result/coverage.xml
          junitxml-path: test_result/pytest.xml

  pytest_on_supported_python_vers:
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - name: Checkout commit
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install package
        run: |
          python -m pip install -q -U pip
          pip install -q .[dev]

      - name: Execute pytest
        run: pytest

  python_lint_check:
    runs-on: ubuntu-22.04
    timeout-minutes: 3
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - name: Checkout commit
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install check dependencies
        run: |
          python -m pip install -q -U pip
          pip install -q .[dev]

      - name: Check code linting
        run: |
          black --check src
          flake8 src
