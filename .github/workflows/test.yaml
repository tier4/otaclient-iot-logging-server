name: test CI

on:
  pull_request:
    branches:
      - main
    # only trigger unit test CI when src or tests changed
    paths:
      - "src/**"
      - "tests/**"
      - ".github/workflows/test.yaml"
  push:
    branches:
      - main
    # only trigger unit test CI when src or tests changed
    paths:
      - "src/**"
      - "tests/**"
      - ".github/workflows/test.yaml"
  # allow the test CI to be manually triggerred
  workflow_dispatch:

jobs:
  pytest_with_coverage_on_supported_os:
    strategy:
      fail-fast: true
      matrix:
        # currently we only need to ensure it is running on the following OS
        # with OS-shipped python interpreter.
        os: ["ubuntu-22.04"]
        include:
          - os: ubuntu-22.04
            python_version: "3.10"
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout commit
        uses: actions/checkout@v4
        with:
          # sonarcloud needs main branch's ref
          fetch-depth: 0

      # also see https://docs.astral.sh/uv/guides/integration/github/#multiple-python-versions
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python_version }}
          enable-cache: true

      - name: Execute pytest with coverage
        run: |
          uv run --python python3 --no-managed-python coverage run -m pytest --junit-xml=test_result/pytest.xml
          uv run --python python3 --no-managed-python coverage xml -o test_result/coverage.xml

      # export the coverage report to the comment!
      - name: Add coverage report to PR comment
        continue-on-error: true
        uses: MishaKav/pytest-coverage-comment@v1.1.51
        with:
          pytest-xml-coverage-path: test_result/coverage.xml
          junitxml-path: test_result/pytest.xml

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  pytest_on_supported_python_vers:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]
    steps:
      - name: Checkout commit
        uses: actions/checkout@v4

      # also see https://docs.astral.sh/uv/guides/integration/github/#multiple-python-versions
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true

      - name: Execute pytest via uv
        run: uv run -m pytest
